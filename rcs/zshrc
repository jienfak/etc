# Jien's zshrc.
# Modules.
. $SHMODS/chores/hasprog.sh
. $SHMODS/chores/loseall.sh
. $SHMODS/chores/aliasv.sh
. $SHMODS/chores/printv.sh
. "$HOME/.login"
G="$GIT"
C="$CODE"
E="$ETC"
S="$SHARE"
B="$BIN"
autoload -Uz compinit promptinit
bindkey "<Shift-Tab>" undo
compinit
promptinit
zstyle ':completion:*' menu select
#zstyle ':completion:*:manuals'   separate-sections true
#zstyle ':completion:*:manuals.*' insert-sections true
#zstyle ':completion:*:man:*'     menu yes select
setopt correct
# History configuration.
zshaddhistory() { whence ${${(z)1}[1]} >| /dev/null || return 1 }
HISTFILE="$HOME/.zhistory"
HISTSIZE="10000"
SAVEHIST="$HISTSIZE"
setopt menu_complete
setopt append_history
setopt extended_history
setopt inc_append_history
setopt share_history
setopt hist_ignore_all_dups
setopt hist_ignore_space
setopt hist_reduce_blanks
setopt no_hist_beep
setopt auto_cd
#setopt extended_glob
setopt nonomatch
setopt notify
setopt hash_list_all
setopt nohup
setopt nobeep
setopt noglobdots
setopt noshwordsplit
shpwd() {
  echo -n ${${:-/${(j:/:)${(M)${(s:/:)${(D)PWD:h}}#(|.)[^.]}}/${PWD:t}}//\/~/\~}
}
#setopt PROMPT_SUBST
#export PROMPT='%F{yellow}%f%F{red}%n%f@%F{blue}%m%f:%F{yellow}$(shpwd)%f%(!.#.$)'
#RPROMPT='%F{red}[%f%F{brgreen}%T%f%F{red}]%f[%F{yellow}%?%f%F{blue}%L%f]'
#PROMPT="$SHPROMPT"
PROMPT="$SHPROMPT"
my-backward-delete-word() {
    local WORDCHARS=${WORDCHARS/\//}
    zle backward-delete-word
}
# Git status.
git_custom_status(){
}
# Vi Mode.
if [ "$ZSH_VI_MODE" == 'true' ] ; then
	bindkey -v
fi
#bindkey '^P' up-history
#bindkey '^N' down-history
bindkey '^P' history-beginning-search-backward
bindkey '^N' history-beginning-search-forward
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
#bindkey '^w' backward-kill-word
zle -N my-backward-delete-word
bindkey '^W' my-backward-delete-word
bindkey '^r' history-incremental-search-backward
#EPS1=$RPROMPT
function zle-line-init zle-keymap-select {
	VIM_PROMPT="%{$fg_bold[yellow]%} [% NORMAL]%  %{$reset_color%}"
	RPS1="${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/}($(git_custom_status))$EPS1"
	zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select
export KEYTIMEOUT=1
# Plugins.
set -A plugin_dirs \
	"/usr/share/" \
	"/usr/share/zsh/plugins"
set -A plugins \
	syntax-highlighting \
	autosuggestions
for plugin in $plugins ; do
	for dir in $plugin_dirs ; do
		file=$dir/zsh-$plugin/zsh-$plugin.zsh
		if [ -f $file ] ; then
			printv_zsh -P "[%F{green}+%f]Got %F{cyan}'$plugin'%f plugin from %F{red}'$file'%f;"
			source $file
			break
		fi
	done
done
ZSH_AUTOSUGGEST_STRATEGY="history"
bindkey '^ ' autosuggest-accept
bindkey -s "^o" 'lfcd\n'
# Aliases.
printv_zsh "Alias section. aliasing..."
aliasv_zsh egui "$VISUAL"
aliasv_zsh suegui "sudo $VISUAL"
aliasv_zsh e "$EDITOR"
aliasv_zsh sue "sudo $EDITOR"
aliasv_zsh g "git"
aliasv_zsh q "exit"
aliasv_zsh l "ls      --color=always"
aliasv_zsh ll "ls -l  --color=always"
aliasv_zsh la "ls -la --color=always"
aliasv_zsh "m" "sudo mount"
aliasv_zsh "um" "sudo umount"
aliasv_zsh "info" 'info --vi-keys'
aliasv_zsh "ipython" "ipython --TerminlInteractiveShell.editing_mode=$EDITMODE"
aliasv_zsh "ipython2" "ipython2 --TerminalInteractiveShell.editing_mode=$EDITMODE"
aliasv_zsh "ipython3" "ipython3 --TerminalInteractiveShell.editing_mode=$EDITMODE"
aliasv_zsh "jack_control" "jackctl"
set -A grc_progs \
	cat cvs df digg gcc g++ ls ifconfig \
	make mount mtr netstat ping ps tail \
	traceroute wdiff blkid du dnf docker\
	docker-machine env id ip iostat last\
	lsattr lsblk lspci lsmod lsof getfacl\
	getsebool ulimit uptime nmap fdisk findmnt\
	free semanage sar ss sysctl systemctl stat showmount\
	tune2fs tcpdump
if hasprog grc ; then
	printv_zsh -P "We have %F{cyan}'grc'%f here! aliasing colors..."
	for prog in $grc_progs ; do
		if hasprog "$prog" ; then
			al="grc --colour=auto $prog"
			aliasv_zsh "$prog" "$al"
		fi
	done
	aliasv_zsh ll "grc --colour=auto ls -l  --color=always"
	aliasv_zsh la "grc --colour=auto ls -al --color=always"
fi
# Functions.
source $SHMODS/auto/helpa.sh # Automatic help getter.
# LF.
#
if hasprog lf ; then
	LFCD="$XDG_CONFIG_HOME/lf/lfrc"
	#LFCD=""
	if [ -f $LFCD ]; then
		source $LFCD
	fi
fi
if hasprog screenfetch ; then
	printv_zsh -P "\n%F{red}F%f%F{green}A%f%F{blue}K%f::%F{red}Freedom%f:%F{green}Anarchy%f:%F{blue}Knowledge%f::%F{red}F%f%F{green}A%f%F{blue}K%f"
	printv_zsh -P " %F{red}#--------------------------------------------------#%f"
	if [ "$ZSH_VERBOSE_MODE" == 'true' ] ; then
		screenfetch
	fi
	printv_zsh -P " %F{red}#--------------------------------------------------#%f\n"
fi
printv_zsh -P '%F{red}F%f%F{green}A%f%F{blue}K%f%F{yellow}YOU%f... why are you using zsh? Fish is better.'
